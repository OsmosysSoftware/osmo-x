{
	"info": {
		"_postman_id": "5befd636-bdfd-49ff-b5ad-94465b3baab9",
		"name": "osmo-notify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29518992"
	},
	"item": [
		{
			"name": "360Dialog WhatsApp Notifications",
			"item": [
				{
					"name": "Send 360Dialog WhatsApp Notification - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response has valid 'status' and 'data' properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"status\", \"success\");",
									"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response contains a valid 'notification' object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property(\"notification\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response 'channelType' is 3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"channelType\", 3);",
									"});",
									"pm.test(\"Response 'deliveryStatus' is 1\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"deliveryStatus\", 1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 3,\n    \"data\": {\n        \"to\": \"919004812051\",\n        \"type\": \"template\",\n        \"template\": {\n            \"namespace\": \"d8bcb6bd_2ab2_439c_9d9e_947501266c77\",\n            \"name\": \"ir_incident_resolution\",\n            \"language\": {\n                \"policy\": \"deterministic\",\n                \"code\": \"en\"\n            },\n            \"components\": [\n                {\n                    \"type\": \"body\",\n                    \"parameters\": [\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Biswas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"WNK227\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Massive Earthquake\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Power Grid\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Mondal\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Vikas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Open\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"10\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"15755\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send 360Dialog WhatsApp Notification - Missing To Field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid Data (Missing 'to' Value)\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"to should not be empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 3,\n    \"data\": {\n        \"type\": \"template\",\n        \"template\": {\n            \"namespace\": \"d8bcb6bd_2ab2_439c_9d9e_947501266c77\",\n            \"name\": \"ir_incident_resolution\",\n            \"language\": {\n                \"policy\": \"deterministic\",\n                \"code\": \"en\"\n            },\n            \"components\": [\n                {\n                    \"type\": \"body\",\n                    \"parameters\": [\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Biswas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"WNK227\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Massive Earthquake\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Power Grid\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Mondal\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Vikas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Open\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"10\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"15755\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send 360Dialog WhatsApp Notification - Invalid channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid 'channelType'\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"channelType must be one of the following values: 1, 2, 3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 4,\n    \"data\": {\n        \"type\": \"template\",\n        \"template\": {\n            \"namespace\": \"d8bcb6bd_2ab2_439c_9d9e_947501266c77\",\n            \"name\": \"ir_incident_resolution\",\n            \"language\": {\n                \"policy\": \"deterministic\",\n                \"code\": \"en\"\n            },\n            \"components\": [\n                {\n                    \"type\": \"body\",\n                    \"parameters\": [\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Biswas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"WNK227\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Massive Earthquake\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Power Grid\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Mondal\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Vikas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Open\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"10\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"15755\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send 360Dialog WhatsApp Notification - Invalid API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Failed request with invalid API key\", function () {",
									"    pm.expect(pm.response.code).to.equal(401);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data).to.equal(\"Invalid API key\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "bad-api-key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 3,\n    \"data\": {\n        \"to\": \"919004812051\",\n        \"type\": \"template\",\n        \"template\": {\n            \"namespace\": \"d8bcb6bd_2ab2_439c_9d9e_947501266c77\",\n            \"name\": \"ir_incident_resolution\",\n            \"language\": {\n                \"policy\": \"deterministic\",\n                \"code\": \"en\"\n            },\n            \"components\": [\n                {\n                    \"type\": \"body\",\n                    \"parameters\": [\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Biswas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"WNK227\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Massive Earthquake\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Power Grid\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Bishal Mondal\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Vikas\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"Open\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"10\"\n                        },\n                        {\n                            \"type\": \"text\",\n                            \"text\": \"15755\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Twilio WhatsApp Notifications",
			"item": [
				{
					"name": "Send Twilio WhatsApp Notification - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response has valid 'status' and 'data' properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"status\", \"success\");",
									"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response contains a valid 'notification' object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property(\"notification\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response 'channelType' is 3\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"channelType\", 3);",
									"});",
									"pm.test(\"Response 'deliveryStatus' is 1\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"deliveryStatus\", 1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 5,\n    \"data\": {\n        \"to\": \"+919004812051\",\n        \"message\": \"Your appointment is coming up on July 21 at 3PM\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Twilio WhatsApp Notification - Missing To Field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid Data (Missing 'to' Value)\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"to should not be empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 4,\n    \"data\": {\n        \"message\": \"Your appointment is coming up on July 21 at 3PM\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Twilio WhatsApp Notification - Invalid channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid 'channelType'\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"channelType must be one of the following values: 1, 2, 3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 5,\n    \"data\": {\n        \"to\": \"+919004812051\",\n        \"message\": \"Your appointment is coming up on July 21 at 3PM\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Twilio WhatsApp Notification - Invalid API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Failed request with invalid API key\", function () {",
									"    pm.expect(pm.response.code).to.equal(401);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data).to.equal(\"Invalid API key\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "bad-api-key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 4,\n    \"data\": {\n        \"to\": \"+919004812051\",\n        \"message\": \"Your appointment is coming up on July 21 at 3PM\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Mailgun Notifications",
			"item": [
				{
					"name": "Send Mailgun Notification - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response has valid 'status' and 'data' properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"status\", \"success\");",
									"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response contains a valid 'notification' object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property(\"notification\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response 'channelType' is 2\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"channelType\", 2);",
									"});",
									"pm.test(\"Response 'deliveryStatus' is 1\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"deliveryStatus\", 1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 2,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"to\": \"vikas.k@osmosys.co\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Mailgun Notification - Missing To Field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid Data (Missing 'to' Value)\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"to should not be empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 2,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Mailgun Notification - Invalid channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid 'channelType'\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"channelType must be one of the following values: 1, 2, 3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 6,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"to\": \"vikas.k@osmosys.co\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Mailgun Notification - Invalid API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Failed request with invalid API key\", function () {",
									"    pm.expect(pm.response.code).to.equal(401);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data).to.equal(\"Invalid API key\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "bad-api-key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 2,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"to\": \"vikas.k@osmosys.co\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SMTP Notifications",
			"item": [
				{
					"name": "Send SMTP Notification - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response has valid 'status' and 'data' properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"status\", \"success\");",
									"    pm.expect(jsonData).to.have.property(\"data\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response contains a valid 'notification' object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property(\"notification\").to.be.an(\"object\");",
									"});",
									"pm.test(\"Response 'channelType' is 1\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"channelType\", 1);",
									"});",
									"pm.test(\"Response 'deliveryStatus' is 1\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.notification).to.have.property(\"deliveryStatus\", 1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 1,\n    \"data\": {\n        \"from\": \"jacuzisplot@gmail.com\",\n        \"to\": \"vikas.k@osmosys.co\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send SMTP Notification - Missing To Field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid Data (Missing 'to' Value)\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"to should not be empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 1,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send SMTP Notification - Invalid channel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Response for Invalid 'channelType'\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data[0]).to.equal(\"channelType must be one of the following values: 1, 2, 3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{apikey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 6,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"to\": \"vikas.k@osmosys.co\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send SMTP Notification - Invalid API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is valid JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"Failed request with invalid API key\", function () {",
									"    pm.expect(pm.response.code).to.equal(401);",
									"    pm.expect(pm.response.json().status).to.equal(\"fail\");",
									"    pm.expect(pm.response.json().data).to.equal(\"Invalid API key\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "bad-api-key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelType\": 1,\n    \"data\": {\n        \"from\": \"vikaskyatannawar@gmail.com\",\n        \"to\": \"vikas.k@osmosys.co\",\n        \"subject\": \"Test subject\",\n        \"text\": \"This is a test notification\",\n        \"html\": \"<b>This is a test notification</b>\"\n    }\n}"
						},
						"url": {
							"raw": "localhost:3000/notifications",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}